# This is a basic workflow to help you get started with Actions

name: CInew

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request_target:
    branches: [ main ]
    types: [opened]
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    if: |
        (github.event_name == 'push' && github.actor != 'dependabot[bot]') ||
            (github.event_name == 'pull_request_target' && github.actor == 'dependabot[bot]')
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
          echo ${{ github.event_name }}
          echo ${{ github.actor }}

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
            
      - name: Checkout repository
        uses: actions/checkout@v2
          
      # Wait for other running pipelines
      - name: Wait for other pipelines
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: ${{ github.ref }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10
          
          
      # Print secret
      - name: Access action secret
        run: |
          echo printing action secret.
          echo -n ${{ secrets.ACTION_SECRET }} | base64 --decode > "${GITHUB_WORKSPACE}/secret.json"
          cat ${GITHUB_WORKSPACE}/secret.json
          echo ${{ github.event.number }}
